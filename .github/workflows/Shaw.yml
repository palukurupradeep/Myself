name : Build and Push Docker image to ACR
'on' : push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - run: |
          docker build -t korversion:1.0.0 Applicationcode1
          docker images
          docker login ${{ secrets.JFROG_URL1 }} --username ${{ secrets.JFROG_USERNAME }} --password ${{ secrets.JFROG_API1 }}
          docker tag korversion:1.0.0 asuuki.jfrog.io/korrepository/korversion:1.0.0
          docker images
          docker push asuuki.jfrog.io/korrepository/korversion:1.0.0
          az login --service-principal --username ${{ secrets.REGISTRY_USERNAME1 }} --password ${{ secrets.REGISTRY_PASSWORD1 }} --tenant 3d993c04-128c-48de-ba4a-1afbb101cfa1
          az acr login --name ${{ secrets.REGISTRY_LOGIN_SERVER1 }}
          docker tag asuuki.jfrog.io/korrepository/korversion:1.0.0 ${{ secrets.REGISTRY_LOGIN_SERVER1 }}/korversion:1.0.0
          docker images
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER1 }}/korversion:1.0.0
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main  # Use stable version
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'  # Optionally specify the version you want
      - name: Deployment to AKS
        run: | 
             az login --service-principal --username ${{ secrets.REGISTRY_USERNAME1 }} --password ${{ secrets.REGISTRY_PASSWORD1 }} --tenant 3d993c04-128c-48de-ba4a-1afbb101cfa1
             az acr login --name ${{ secrets.REGISTRY_LOGIN_SERVER1 }}
             az aks get-credentials --resource-group Dev-AKS-Cluster_group --name Dev-AKS-Cluster --overwrite-existing
             az aks update -n Dev-AKS-Cluster -g Dev-AKS-Cluster_group --attach-acr ${{ secrets.ACR_USERNAME }}
             kubectl apply -f kubemanifest/deployment.yml -f kubemanifest/Service.yml 
             kubectl get pods
             kubectl get services

           
